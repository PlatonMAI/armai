components_manager:
    task_processors:                  # Task processor is an executor for coroutine tasks

        main-task-processor:          # Make a task processor for CPU-bound coroutine tasks.
            worker_threads: $worker-threads         # Process tasks in 4 threads.

        fs-task-processor:            # Make a separate task processor for filesystem bound tasks.
            worker_threads: $worker-fs-threads

    default_task_processor: main-task-processor

    components:                       # Configuring components that were registered via component_list
        server:
            listener:                 # configuring the main listening socket...
                port: 8001            # ...to listen on this port and...
                task_processor: main-task-processor    # ...process incoming requests on this task processor.
            listener-monitor:
                port: 8000
                task_processor: main-task-processor
        logging:
            fs-task-processor: fs-task-processor
            loggers:
                default:
                    file_path: '@stderr'
                    level: $logger-level
                    overflow_behavior: discard  # Drop logs if the system is too busy to write them down.

        # Dynamic config options. Cache is disabled, updates are disabled.
        dynamic-config:
            # For most of userver dynamic configs, defaults are used, some are overridden here.
            # See userver "dynamic config" docs for what configs exist.
            defaults:
                HTTP_CLIENT_CONNECTION_POOL_SIZE: 1000

        testsuite-support: {}

        http-client:
            load-enabled: $is_testing
            fs-task-processor: fs-task-processor

        dns-client:
            fs-task-processor: fs-task-processor

        tests-control:
            load-enabled: $is_testing
            path: /tests/{action}
            method: POST
            task_processor: main-task-processor
        handler-ping:
            path: /ping
            method: GET
            task_processor: main-task-processor
            throttling_enabled: false
            url_trailing_slash: strict-match

        handler-hello:                    # Finally! Our handler.
            path: /hello                  # Registering handler by URL '/hello'.
            method: GET,POST              # It will only reply to GET (HEAD) and POST requests.
            task_processor: main-task-processor  # Run it on CPU bound task processor

        handler-users-register:
            path: /users/register
            method: POST
            task_processor: main-task-processor
        handler-users-auth:
            path: /users/auth
            method: POST
            task_processor: main-task-processor
        handler-users-logout:
            path: /users/logout
            method: GET
            task_processor: main-task-processor
        handler-users-me:
            path: /users/me
            method: GET
            task_processor: main-task-processor
        handler-users-id:
            path: /users/{id}
            method: GET
            task_processor: main-task-processor

        handler-category_schemas:
            path: /category_schemas
            method: POST,GET,DELETE
            task_processor: main-task-processor
        handler-category_schemas-id:
            path: /category_schemas/{id}
            method: GET
            task_processor: main-task-processor


        postgres-db:
            dbconnection: $dbconnection
            dbconnection#env: DB_CONNECTION
            blocking_task_processor: fs-task-processor
            dns_resolver: async
            sync-start: true


        fs-cache-component:
            fs-task-processor: main-task-processor
            dir: /workspaces/armai/static
        handler-static:
            path: /*
            method: GET
            task_processor: main-task-processor


        handler-log-level:
            path: /service/log-level/{level}
            method: GET,PUT
            task_processor: main-task-processor


        user-repository-component:
            load-enabled: true
        category-schema-repository-component:
            load-enabled: true
        category-repository-component:
            load-enabled: true
